name: Tag and Release
on:
  pull_request:
    branches: [ main ]
    types: [closed]
  workflow_dispatch:
jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      tag_name_output: ${{ steps.tag_version.outputs.new_tag }}
    # output2: ${{ steps.tag_version.outputs.test }}
    steps:
      - name: code-checkout
        uses: actions/checkout@v2

      - name: Bump version and push tag
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.base.ref == 'main'
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main, master

      - name: Create a GitHub release
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.base.ref == 'main'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}


  release:
    needs: tag
    runs-on: ubuntu-latest
    env:
      PROJECT: anz-test-b

    steps:
      - name: Check out release tag
        id: tag_checkout
        uses: actions/checkout@v1
        with:
          ref: ${{ steps.tag_version.outputs.new_tag}}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: $PROJECT
          REL_TAG: ${{ needs.tag.outputs.tag_name_output}}
          # GIT_SHA: ${GITHUB_SHA:7}
        run: |
          echo "Sha: ${GITHUB_SHA}"
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to EKS.
          ECR_REGISTRY=$ECR_REGISTRY PROJECT=$ECR_REPOSITORY TAG_NAME=$REL_TAG make build-runtime-ci
          # echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$REL_TAG"

  post-scan:
    needs: [ release, tag]
    runs-on: ubuntu-latest
    env:
      PROJECT: anz-test-b
    steps:
      - name: Scan Docker image
        id: docker-scan
        uses: alexjurkiewicz/ecr-scan-image@v1.5.0
        env:
          ECR_REGISTRY: $PROJECT
        with:
          repository: $ECR_REPOSITORY
          tag: ${{ needs.tag.outputs.tag_name_output}}
          fail_threshold: medium
      - run: echo "${{ steps.docker-scan.outputs.total }} total vulnerabilities."