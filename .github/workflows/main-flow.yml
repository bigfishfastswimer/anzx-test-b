name: Test and Lint

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    # tags:
    #   - v*
    branches:
      - main
      - feat*
  pull_request:
    branches: [ main ]
    types: [closed]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: setup-go
        uses: actions/setup-go@v1
        id: go
        with:
          go-version: 1.16
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: code-checkout
        uses: actions/checkout@v2

      - name: Cache go modules
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          # go cache files are stored in ` ~/go/pkg/mod` on Linux/macOS
          path:  ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: go-test
        run: make test

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.29
          # Optional: working directory, useful for monorepos
          working-directory: app

      - name: Bump version and push tag
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.base.ref == 'main'
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main, master

      - name: Create a GitHub release
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.base.ref == 'main'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }} 